function funkifize() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var range = 0;
  
  for(var x = 1; x <= size; x++) {
    for(var y = 1; y <= size; y++) {
      range = sheet.getRange(x,y);
      funkifizeCell(x,y);
    }
  }
}

function funkifizePlayer() {
  funkifizeCell(playercellX, playercellY);
}

function funkifizeCell(x,y) {
  var sheet = SpreadsheetApp.getActiveSheet();
  var range = sheet.getRange(x,y);
  var debug = range.getValue();
  
  if(range.getValue() == 1) {
    range.setFontColor(black);
    range.setBackgroundColor(black);
  }
  if(range.getValue() == 2) {
    range.setFontColor(white);
    range.setBackgroundColor(white);
  }
}

function checkStuff(x,y) {
  /*killIfNotFree(x,y);
  for(i in neighbors(x,y)) {
    killIfNotFree(i[0], i[1]);
  }*/
}

function killIfNotFree(x,y) {
  var asdf = isFree(x,y);
  var free = asdf[0];
  var cells = asdf[1];
  
  if(! free) {
    var sheet = SpreadsheetApp.getActiveSheet();
    
    for(i in cells) {
      sheet.getRange(i[0], i[1]).clear();
    }
  }
}

function testIsFree() {
  isFree(1,1);
}

function isFree(x,y) {
  if(isEmpty(x,y)) return true;//(true, []);
  
  var q = [];
  var free = false;
  var done = [];
  var i;
  
  var black = isBlack(x,y);
  
  q.push((x,y));
  while(q.length > 0) {
    i = q.pop();
    done.push(i);
    for(var n in neighbors(i[0], i[1])) {
      if(isEmpty(j[0], j[1])) {
        free = true;
      } else if(black == isBlack(x,y) && done.indexOf(j[0], j[1]) == -1) {
        q.push(j);
      }
    }
  }
  //return (free, done);
  return free;
}

function neighbors(x,y) {
  var ret = [];
  if(inField(x+1, y)) ret.push((x+1,y));
  if(inField(x, y+1)) ret.push((x,y+1));
  if(inField(x-1, y)) ret.push((x-1,y));
  if(inField(x, y-1)) ret.push((x,y-1));
  return ret;
}

function inField(x,y) {
  if(x >= 1 && x <= size && y >= 1 && y <= size) {
    return true;
  }
  return false;
}
